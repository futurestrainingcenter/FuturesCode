import smtplib
import ssl
import os
import csv
from email.message import EmailMessage

# SMTP Server Information
sender = 'reports@futurestrainingcenter.com'
password = 'auqg qrto nrtw dddi'
smtp_server = 'smtp.gmail.com'
port = 465  # For SSL

# Email Content
subject = 'Fixed Physicality Report'
body = """
    <html>
        <body>
            <p>Hey Futures Members! A bug causing incorrect data being displayed in the Physicality Report has now been fixed. <br>
            See the corrected reports below. <br><br>
            *This email was auto generated by Futures Data Department.</p>
            <img src="cid:image1">  <!-- Image tag with Content-ID reference -->
        </body>
    </html>
"""

# Path to the folder containing all members' folders
base_folder_path = '/Users/watts/Documents/Futures Performance Center/Test Reports'

# CSV file containing member names and emails
csv_file_path = '/Users/watts/Downloads/Email Test - Sheet1.csv'

# Path to the log file
log_file_path = '/Users/watts/Downloads/email_logs.txt'

image_file_path = '/Users/watts/Downloads/CoronaHSFlyerNewMemberPromo.png'

# Load members from CSV into a dictionary
members = {}
with open(csv_file_path, newline='') as csvfile:
    reader = csv.DictReader(csvfile)
    for row in reader:
        members[row['Name']] = row['Email']

# Read the log file to get a list of email addresses that have already been processed
processed_emails = set()
if os.path.exists(log_file_path):
    with open(log_file_path, 'r') as log_file:
        processed_emails = set(log_file.read().splitlines())

# Counter for the number of emails sent
emails_sent_count = 0

# Process each folder in the base directory
for member_folder in os.listdir(base_folder_path):
    folder_path = os.path.join(base_folder_path, member_folder)

    if os.path.isdir(folder_path) and member_folder in members:
        member_email = members[member_folder]

        if member_email not in processed_emails:
            # Create email message
            em = EmailMessage()
            em['From'] = sender
            em['To'] = member_email
            em['Subject'] = subject
            em.set_type('multipart/related')
            em.add_alternative(body, subtype='html')

            with open(image_file_path, 'rb') as img:
                em.get_payload()[0].add_related(img.read(), maintype='image', subtype='jpeg', cid='image1')

            # Attach PDF files from the member's folder
            for file_name in os.listdir(folder_path):
                if file_name.endswith('.pdf'):
                    file_path = os.path.join(folder_path, file_name)
                    with open(file_path, 'rb') as file:
                        em.add_attachment(file.read(), maintype='application', subtype='pdf', filename=file_name)

            # Send email
            try:
                with smtplib.SMTP_SSL(smtp_server, port, context=ssl.create_default_context()) as smtp:
                    smtp.login(sender, password)
                    smtp.send_message(em)
                emails_sent_count += 1
                print(f'Email sent to {member_email}')

                # Update the log file with the email address
                with open(log_file_path, 'a') as log_file:
                    log_file.write(member_email + '\n')
            except Exception as e:
                print(f'Error sending email to {member_email}: {e}')
        else:
            print(f'Email already sent to {member_email}, skipping...')
    else:
        print(f'Error: No member found in CSV for folder "{member_folder}". Skipping...')

# Script completed
print(f'Email processing completed. Total emails sent: {emails_sent_count}')

